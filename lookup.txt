const { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');

const nextConfig = {
  reactStrictMode: false,
  swcMinify: true,
  basePath: "/en-in",
  async redirects() {
    return [
      {
        source: "/",
        destination: "/en-in",
        basePath: false,
        permanent: false
      },
      {
        source: "/homepage",
        destination: "/",
        permanent: true
      }
    ]
  },
  async rewrites() {
    return [
      {
        source: "/robots.txt",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/robots.txt`,
        basePath: false
      },
      {
        source: "/sitemap.xml",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/sitemap.xml`,
        basePath: false
      },
      {
        source: "/destinations.xml",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/destinations.xml`,
        basePath: false
      },
      {
        source: "/about-ama.xml",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/about-ama.xml`,
        basePath: false
      },
      {
        source: "/offers.xml",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/offers.xml`,
        basePath: false
      },
      {
        source: "/themes.xml",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/themes.xml`,
        basePath: false
      },
      {
        source: "/experiences.xml",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/experiences.xml`,
        basePath: false
      },
      {
        source: "/villas-and-bungalows.xml",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/villas-and-bungalows.xml`,
        basePath: false
      },
      {
        source: "/blogs.xml",
        destination: `${process.env.NEXT_PUBLIC_DOMAIN_URL}en-in/blogs.xml`,
        basePath: false
      }
    ]
  },
  experimental: {
    serverActions: true
  },
  webpack(config, { isServer }) {
    // Add Bundle Analyzer
    if (process.env.ANALYZE) {
      config.plugins.push(
        new BundleAnalyzerPlugin({
          analyzerMode: 'server',
          analyzerPort: isServer ? 8888 : 8889,
          openAnalyzer: true,
        })
      );
    }

    // Enable tree-shaking and optimize the build process
    config.optimization = {
      ...config.optimization,
      usedExports: true,  // Ensure Webpack marks unused exports for removal
      minimize: true,     // Minimize the bundle to remove dead code
      splitChunks: {
        chunks: 'all',    // Split all chunks for better optimization
      },
    };

    // Ensure production mode for frontend builds
    if (!isServer) {
      config.mode = 'production';
    }

    return config;
  }
}

module.exports = nextConfig;
